/**
 * Partial for adding standard breakpoint variables
 */
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700");
@media (min-width: 0) {
  .breakpoint-info:after {
    content: ' ($xxs)';
  }
}

@media (min-width: 320px) {
  .breakpoint-info:after {
    content: ' ($xs)';
  }
}

@media (min-width: 544px) {
  .breakpoint-info:after {
    content: ' ($sm)';
  }
}

@media (min-width: 800px) {
  .breakpoint-info:after {
    content: ' ($md)';
  }
}

@media (min-width: 960px) {
  .breakpoint-info:after {
    content: ' ($lg)';
  }
}

@media (min-width: 1100px) {
  .breakpoint-info:after {
    content: ' ($xl)';
  }
}

.is-vishidden {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
}

body {
  background-color: #fbfcfd;
}

/**
 * @file
 * Styles for breadcrumbs.
 */
.breadcrumb {
  padding-bottom: 0.5em;
}

.breadcrumb ol {
  margin: 0;
  padding: 0;
}

[dir="rtl"] .breadcrumb ol {
  /* This is required to win over specificity of [dir="rtl"] ol */
  margin-right: 0;
}

.breadcrumb li {
  display: inline;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* IE8 does not support :not() and :last-child. */
.breadcrumb li:before {
  content: ' \BB ';
}

.breadcrumb li:first-child:before {
  content: none;
}

/**
 * @file
 * Utility classes to hide elements in different ways.
 */
/**
 * Hide elements from all users.
 *
 * Used for elements which should not be immediately displayed to any user. An
 * example would be collapsible details that will be expanded with a click
 * from a user. The effect of this class can be toggled with the jQuery show()
 * and hide() functions.
 */
.hidden {
  display: none;
}

/**
 * Hide elements visually, but keep them available for screen readers.
 *
 * Used for information required for screen reader users to understand and use
 * the site where visual display is undesirable. Information provided in this
 * manner should be kept concise, to avoid unnecessary burden on the user.
 * "!important" is used to prevent unintentional overrides.
 */
.visually-hidden {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  height: 1px;
  width: 1px;
  word-wrap: normal;
}

/**
 * The .focusable class extends the .visually-hidden class to allow
 * the element to be focusable when navigated to via the keyboard.
 */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  position: static !important;
  clip: auto;
  overflow: visible;
  height: auto;
  width: auto;
}

/**
 * Hide visually and from screen readers, but maintain layout.
 */
.invisible {
  visibility: hidden;
}

.js-facets-checkbox-links {
  list-style-type: none;
  padding-left: 0;
}

.js-facets-checkbox-links.content-type {
  margin-bottom: 0;
}

.js-facets-checkbox-links.media-type {
  margin-top: 0;
}

.js-facets-checkbox-links .facet-item label {
  display: inline-block;
  margin-left: 10px;
}

#views-exposed-form-acquia-search-page {
  margin-top: 10px;
}

#views-exposed-form-acquia-search-page .form-item-search {
  display: inline-block;
}

#views-exposed-form-acquia-search-page .form-item-search label {
  font-size: 1.5em;
  font-family: "Montserrat", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-weight: 700;
  font-size: 1.5em;
}

#views-exposed-form-acquia-search-page #edit-actions {
  display: inline-block;
}

.form-item-sort-bef-combine {
  display: table-row;
  float: none !important;
  margin-bottom: 1em;
}

.form-item-sort-bef-combine label {
  display: table-cell;
  padding-right: .5em;
}

.form-item-sort-bef-combine select {
  display: table-cell;
}

/**
 * @file
 * Styles for system messages.
 */
.messages {
  background: no-repeat 10px 17px;
  /* LTR */
  border: 1px solid;
  border-width: 1px;
  /* LTR */
  border-radius: 2px;
  padding: 0.75em;
  /* LTR */
  word-wrap: break-word;
  overflow-wrap: break-word;
  margin-bottom: 0.75em;
}

.messages + .messages {
  margin-top: 1.538em;
}

[dir="rtl"] .messages {
  border-width: 1px 0 1px 1px;
  background-position: right 10px top 17px;
  padding-left: 20px;
  padding-right: 35px;
  text-align: right;
}

.messages__list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.messages__item + .messages__item {
  margin-top: 0.769em;
}

/* See .color-success in Seven's colors.css */
.messages--status {
  color: #325e1c;
  background-color: #f3faef;
  border: 1px solid #c9e1bd;
  /* LTR */
  background-image: url(../../../../misc/icons/73b355/check.svg);
  -webkit-box-shadow: 0;
  box-shadow: 0;
}

[dir="rtl"] .messages--status {
  border-color: #c9e1bd transparent #c9e1bd #c9e1bd;
  -webkit-box-shadow: 8px 0 0 #77b259;
  box-shadow: 8px 0 0 #77b259;
  margin-left: 0;
}

/* See .color-warning in Seven's colors.css */
.messages--warning {
  background-color: #fdf8ed;
  background-image: url(../../../../misc/icons/e29700/warning.svg);
  border-color: #f4daa6 #f4daa6 #f4daa6 transparent;
  /* LTR */
  color: #734c00;
  -webkit-box-shadow: -8px 0 0 #e09600;
  box-shadow: -8px 0 0 #e09600;
  /* LTR */
}

[dir="rtl"] .messages--warning {
  border-color: #f4daa6 transparent #f4daa6 #f4daa6;
  -webkit-box-shadow: 8px 0 0 #e09600;
  box-shadow: 8px 0 0 #e09600;
}

/* See .color-error in Seven's colors.css */
.messages--error {
  background-color: #fcf4f2;
  color: #a51b00;
  background-image: url(../../../../misc/icons/e32700/error.svg);
  border-color: #f9c9bf #f9c9bf #f9c9bf transparent;
  /* LTR */
  -webkit-box-shadow: -8px 0 0 #e62600;
  box-shadow: -8px 0 0 #e62600;
  /* LTR */
}

[dir="rtl"] .messages--error {
  border-color: #f9c9bf transparent #f9c9bf #f9c9bf;
  -webkit-box-shadow: 8px 0 0 #e62600;
  box-shadow: 8px 0 0 #e62600;
}

.messages--error p.error {
  color: #a51b00;
}

/**
 * @file
 * Visual styles for tabs.
 */
div.tabs {
  margin: 0;
}

ul.tabs {
  list-style: none;
  margin: 0 0 1em 0;
  padding: 0;
}

ul.tabs.primary {
  margin-bottom: 0;
}

.tabs > li {
  display: inline-block;
  margin: 0 0.3em 0 0;
  /* LTR */
}

[dir="rtl"] .tabs > li {
  margin-left: 0.3em;
  margin-right: 0;
}

.tabs a {
  display: block;
  padding: 0.2em 1em;
  text-decoration: none;
  background-color: #608fa9;
  color: white;
}

.tabs a.is-active {
  background-color: #81a6bb;
  color: white;
}

.tabs a:focus,
.tabs a:hover {
  background-color: #a2becd;
  color: #152128;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
}

.page-wrapper {
  max-width: 100%;
  margin: 0 auto;
}

.page-container {
  padding: 0.75em;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

@media (min-width: 100%) {
  .page-container {
    padding: 1.5em;
  }
}

.section-outer {
  background-color: rgba(24, 25, 43, 0.03);
  padding: 1.5em;
  margin-bottom: calc( 0.09375em + 0.625vw);
  border-radius: 0.1875em;
  -webkit-box-shadow: inset 0 0 4em rgba(0, 0, 0, 0.08);
  box-shadow: inset 0 0 4em rgba(0, 0, 0, 0.08);
}

@media (min-width: 100%) {
  .section-outer {
    margin-bottom: calc( 0.09375em + 0.625%);
  }
}

.section-outer--navigation {
  background-color: transparent;
  -webkit-box-shadow: none;
  box-shadow: none;
  padding-top: .4em;
  padding-bottom: .4em;
}

.region-header {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: auto;
  grid-template-areas: "title" "subtitle" "social";
}

@media (min-width: 650px) {
  .region-header {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "title title social" "subtitle subtitle subtitle";
  }
}

.site-name {
  grid-area: title;
}

.site-slogan {
  grid-area: subtitle;
}

.site-slogan .inner {
  margin-top: .25em;
  margin-bottom: -.15em;
  line-height: 1.2;
}

#block-socialmedia {
  grid-area: social;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width: 650px) {
  #block-socialmedia {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }
}

#block-socialmedia ul.menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 0;
  margin: 1em 0 0;
}

@media (min-width: 650px) {
  #block-socialmedia ul.menu {
    margin: .3em -.2em;
  }
}

#block-socialmedia ul.menu li {
  display: block;
  -ms-flex-item-align: top;
  align-self: top;
  padding: 0;
  margin: 0 1.25em 0 0;
  list-style-type: none;
}

@media (min-width: 650px) {
  #block-socialmedia ul.menu li {
    margin: 0 .5em;
  }
}

#block-socialmedia ul.menu li a {
  display: block;
  font-size: 3em;
  padding: 0;
  margin: 0;
  line-height: 1;
  color: #4b748b;
}

@media (min-width: 650px) {
  #block-socialmedia ul.menu li a {
    font-size: 2em;
  }
}

#block-socialmedia ul.menu li a:hover {
  color: #608fa9;
}

div.region--info > * {
  margin: 1em 0 0;
}

div.region--info > *:first-child {
  margin-top: 0;
}

html {
  font-size: 16px;
}

body {
  font-family: "Open Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 1em;
  font-weight: 500;
  line-height: 1.6;
  color: rgba(0, 0, 0, 0.8);
}

h1, .site-name, h2, .site-slogan, h3, h4, h5, p {
  margin: 0;
  padding: 0;
}

.paragraph {
  margin: 0 0 1.5em;
}

p {
  margin: 0 0 0.75em;
}

p:last-of-type {
  margin-bottom: 0;
}

h1, .site-name, h2, .site-slogan, h3, h4, h5 {
  margin-bottom: 0.375em;
  color: rgba(21, 33, 39, 0.72);
}

h2, .site-slogan, h3, h4, h5 {
  color: rgba(21, 32, 39, 0.675);
}

h1, .site-name, h2, .site-slogan, h3, h4, h5 {
  font-family: "Montserrat", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  line-height: 1.2;
  font-weight: 600;
}

h1, .site-name {
  font-size: 2.197em;
}

h2, .site-slogan {
  font-size: 1.69em;
}

h3 {
  font-size: 1.3em;
}

h4 {
  font-size: 1em;
}

a {
  color: #000485;
  text-decoration: none;
}

a:hover {
  color: rgba(0, 4, 133, 0.7);
  text-decoration: underline;
}

.site-name {
  line-height: 1;
  margin: 0;
}

.site-name a {
  display: block;
  text-decoration: none;
  color: #39586a;
  margin-left: -.05em;
  margin-top: -.07em;
}

.site-slogan {
  color: #4b748b;
  font-size: 1.625em;
  line-height: 1.0;
  margin: 0;
  font-weight: 100;
}

.layout__region--content > .block {
  border: 1px solid rgba(0, 0, 0, 0.25);
  padding: .5rem;
  margin-bottom: 1rem;
}

nav#block-mainmenu ul.menu {
  font-size: 15px;
  padding: 0;
  margin: -.25em -.5em -.5em;
  list-style-type: none;
}

nav#block-mainmenu ul.menu::before {
  clear: both;
  content: "";
  display: table;
}

nav#block-mainmenu ul.menu::after {
  clear: both;
  content: "";
  display: table;
}

nav#block-mainmenu ul.menu li.menu-item {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

nav#block-mainmenu ul.menu li.menu-item > span,
nav#block-mainmenu ul.menu li.menu-item > a {
  font-family: "Montserrat", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 1.25em;
  font-weight: 500;
  display: block;
  line-height: 1.2;
  padding: .3em .5em .2em .475em;
  margin: 0 .25em .25em 0;
  border-radius: 0.1875em;
  color: #4b748b;
  background-color: #e7eaec;
  text-decoration: none;
}

nav#block-mainmenu ul.menu li.menu-item > span:hover,
nav#block-mainmenu ul.menu li.menu-item > a:hover {
  color: #608fa9;
  background-color: #d7e3ea;
}

nav#block-mainmenu ul.menu li.menu-item.menu-item--active-trail a {
  background-color: #90b0c3;
  color: rgba(255, 255, 255, 0.75);
}

nav#block-mainmenu ul.menu > li.menu-item {
  display: block;
  float: left;
}

nav#block-mainmenu ul.menu ul.sub-nav {
  padding: 0;
  margin: 0;
  list-style-type: none;
  font-size: .9em;
}

body.path-frontpage h1.page-title, body.path-frontpage .page-title.site-name {
  display: none;
}

.paragraph--portfolio-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 2.25em;
}

.paragraph--portfolio-item .image {
  display: none;
  -webkit-box-flex: 0;
  -ms-flex: none;
  flex: none;
}

@media (min-width: 800px) {
  .paragraph--portfolio-item .image {
    display: block;
  }
}

.paragraph--portfolio-item .image .inner {
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  position: relative;
  width: 100px;
  height: 100px;
  margin-right: 1em;
  border: 1px solid rgba(75, 116, 139, 0.2);
  overflow: hidden;
}

.paragraph--portfolio-item .image .inner a {
  -o-object-fit: contain;
  object-fit: contain;
  -o-object-position: 50% 50%;
  object-position: 50% 50%;
  display: block;
  height: inherit;
  width: inherit;
}

.paragraph--portfolio-item .image .inner a img {
  height: 100%;
  width: 100%;
  -o-object-fit: contain;
  object-fit: contain;
  -o-object-position: 50% 50%;
  object-position: 50% 50%;
}

.paragraph--portfolio-item .image .inner a.shadow {
  -webkit-box-shadow: inset 0 0 1.25em rgba(0, 0, 0, 0.25);
  box-shadow: inset 0 0 1.25em rgba(0, 0, 0, 0.25);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.paragraph--portfolio-item .image .inner a.shadow:hover {
  -webkit-box-shadow: inset 0 0 0.75em rgba(0, 0, 0, 0.2);
  box-shadow: inset 0 0 0.75em rgba(0, 0, 0, 0.2);
}

.paragraph--portfolio-item .text {
  -webkit-box-flex: 3;
  -ms-flex: 3;
  flex: 3;
}

.paragraph--portfolio-item .text h4.paragraph-title {
  font-size: 1.125em;
  line-height: 1.2;
  padding: 0;
  margin-bottom: 0;
}

.paragraph--portfolio-item .text a.paragraph-link {
  display: block;
  margin-bottom: 0.375em;
}

hr.paragraph--simple-divider {
  display: block;
  margin: 0 auto 1.5em;
  border-top: 0;
  border-right: 0;
  border-bottom: 2px solid rgba(0, 0, 0, 0.12);
  border-left: 0;
}

.page-node-type-show .page-container {
  padding: 0;
  margin: 0;
  height: 100vh;
  display: grid;
  grid-template-areas: "header header" "content map";
}

.page-node-type-show .section-outer {
  border-radius: 0;
  margin: 0;
}

.page-node-type-show .section-outer--header {
  -webkit-box-flex: 0;
  -ms-flex: none;
  flex: none;
  background-color: rgba(0, 0, 0, 0.1);
  grid-area: header;
  height: 13vh;
}

.page-node-type-show .section-outer--navigation {
  display: none;
}

.page-node-type-show .section-outer--content {
  grid-area: content;
  height: 87vh;
  width: 60vw;
  overflow-y: scroll;
}

.page-node-type-show #map {
  grid-area: map;
  width: 40vw;
  height: 87vh;
}

.place-link {
  cursor: pointer;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
